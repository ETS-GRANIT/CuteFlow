module data_transfer
  implicit none
contains
  subroutine cpu_to_gpu_initial_data_transfer
    use precision_kind
    use global_data
    use global_data_device
    use cudafor

    integer :: tempinlet, ierr

    friction_d          = friction
    gp_d                = gp
    is_override_manning_d  = is_override_manning
    override_manning_d  = override_manning

    !! Mesh data variables
    elt_bound_d = elt_bound

    !! Initial data variables
    solinit_d           = solinit
    eqlin_barrage_d     = eqlin_barrage
    h_amont_d           = h_amont
    u_amont_d           = u_amont
    v_amont_d           = v_amont
    h_aval_d            = h_aval
    u_aval_d            = u_aval
    v_aval_d            = v_aval
    x1eqbar_d           = x1eqbar
    x2eqbar_d           = x2eqbar
    y1eqbar_d           = y1eqbar
    y2eqbar_d           = y2eqbar

    plan_d = plan
    xplan_d = xplan
    yplan_d = yplan
    zplan_d = zplan
    xpoint_d = xpoint
    ypoint_d = ypoint
    zpoint_d = zpoint


    !! Simulation variables
    if(inlet == 'transm') then
      tempinlet = 1
      inlet_d = tempinlet
    else if(inlet == 'inflow') then
      tempinlet = 2
      inlet_d = tempinlet
    endif

    ! loi_debitglob_d = loi_debitglob
    iflux_d         = iflux
    ilimiteur_d     = ilimiteur
    iupwind_d       = iupwind
    fricimplic_d    = fricimplic
    debit_var_d     = debit_var 
    freqaffich_d    = freqaffich
    comptvisu_d     = comptvisu
    cptsolvisu_d      = cptsolvisu
    cptsoljauge_d   = cptsoljauge
    cptsolrestart_d     = cptsolrestart
    cptdebit_d      = cptdebit 
    long_d          = long
    critere_arret_d = critere_arret
    debitglob_d     = debitglob
    h_sortie_d      = h_sortie
    ts_d            = ts
    tsstab_d        = tsstab
    is_dt_constant_d= is_dt_constant
    constant_dt_d   = constant_dt
    dt_d            = dt
    cfl_d           = cfl
    tol_d           = tol
    tolisec_d       = tolisec
    tolaffiche_d    = tolaffiche
    tol_reg_perm_d  = tol_reg_perm

    !! Input for stochastic analysis
    ndim_d              =ndim 
    ndln_d              =ndln     
    departchrono_d      =departchrono
    convec_d            =convec
    h0_d                =h0

    mpi_process_id_d = mpi_process_id

    tc_init_d = tc_init

    call cuda_glerror('ierr <- global_data_transfer <-- data_transfer.cuf',1)

  end subroutine cpu_to_gpu_initial_data_transfer
end module data_transfer

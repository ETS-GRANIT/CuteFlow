module global_data
  ! ======================================================================
  !     global = module de stockage des variables
  !     auteur  : Youssef Loukili  GRANIT ETSMTL
  !     version : 1.0  ;  May 12 2003
  ! ======================================================================

  use precision_kind
  use cudafor

  !!Type pour message MPI
  type msg_range
    integer :: start, length, proc
  end type

  type msg_list
    integer :: length, proc
    integer, dimension(:), allocatable :: elem_id
  end type

  type(msg_range), dimension(:), allocatable :: elt_fant_recep_range
  type(msg_list), dimension(:), allocatable :: elt_fant_envoi_list

  !!Streams CUDA
  integer(kind=cuda_stream_kind) :: stream1, stream2, stream3
  integer :: istat

  !! Variables MPI
  integer :: mpi_process_id, num_mpi_process, mpi_ierr
  integer, dimension(:), allocatable :: reqsend
  integer, dimension(:), allocatable :: reqrecv
  integer, dimension(:,:), allocatable :: sendstat, recvstat

  !! Variables donnees du terrain
  integer             :: friction=0, is_override_manning, diffusion=0
  real(fp_kind)       :: gp, override_manning


  !! Variables donnees du maillage
  character(len=60)       :: meshfile, meshfile_path="./"
  integer                 :: elt_bound, nombre_entrees, nombre_sorties
  integer, dimension(20)  :: elts


  !! Variables donnees initiales
  character(len=200)  :: fich_sol_init
  integer             :: solinit, eqlin_barrage, plan, sortie_finale_bluekenue, solsimple
  real(fp_kind)             :: h_amont, u_amont, v_amont, h_aval, u_aval, v_aval
  real(fp_kind)             :: xplan, yplan, zplan, xpoint, ypoint, zpoint
  real(fp_kind)             :: x1eqbar, x2eqbar, y1eqbar, y2eqbar

  !! Variables donnees de simulation
  character(len=6)    :: inlet
  character(len=30)   :: loi_debitglob
  integer :: iflux, ilimiteur=1, iupwind=1, fricimplic=1, debit_var  
  integer :: freqaffich, solrestart, restart_snapshots, simple_snapshots
  real(fp_kind) :: sol_z_offset=0.
  integer :: comptvisu, cptsolvtk, cptsoljauge, cptsolrestart, cptdebit, cptviscoupe, cptsolsimple
  real(fp_kind) :: long, critere_arret, debitglob_sum
  real(fp_kind), dimension(20) :: debitglob, h_sortie
  character(len=100) :: inlet_name(20), outlet_name(20)
  real(fp_kind) :: ts, tsstab, cfl, tolisec, tol_reg_perm
  real(fp_kind) :: constant_dt=0.
  real(fp_kind), allocatable, pinned :: dt, dt_max !!pinned ofr better CPU-GPU exchange
  real(fp_kind) :: tol=1e-6, tolaffiche=1e-1
  real(fp_kind), dimension(10) :: coupe_a, coupe_b

  integer :: nelt_global, nelt_global_non_fant
  integer :: nnt_global
  integer :: vtk_snapshots, base_unique, nonlin, solvtk, k_base
  integer :: cuda_aware=1
  integer :: is_cgns=0, is_dt_constant=0
  integer :: debug_mode=0, max_iter=5

  !! Construction de la namelist pour la lecture du fichier de donnee
  namelist/donnees_namelist/ &

  & debug_mode, max_iter, &
  & gp, &
  & is_override_manning, override_manning, & 

  & is_cgns,&
  & meshfile_path,&
  & meshfile, elt_bound, nombre_entrees, nombre_sorties, &

  &cuda_aware,&

  & eqlin_barrage, x1eqbar, x2eqbar, y1eqbar, y2eqbar, &
  & h_amont, u_amont, v_amont, h_aval, u_aval, v_aval, & 
  & plan, xplan, yplan, zplan, xpoint, ypoint, zpoint&
  & solinit, fich_sol_init, &

  & inlet, inlet_name,  debitglob, debit_var,loi_debitglob, outlet_name, h_sortie, &

  & iflux, ilimiteur, iupwind&
  & tolisec, & 
  & friction, fricimplic, &
  & diffusion, &
   
  & ts, cfl, tol_reg_perm,& 
  & is_dt_constant, constant_dt, &
  & freqaffich,tolaffiche&

  & sol_z_offset,& !!ne fonctionne que pour simple vtk et bluekenue
  & solrestart, restart_snapshots,& 
  & solsimple, simple_snapshots, &
  & solvtk, vtk_snapshots,&
  & sortie_finale_bluekenue

  !! Input pour l'analyse stochastiqu
  character (2)  :: key, genrelt
  character (3)  :: un_voisin_sec
  character,  allocatable  :: un_voisin_sec1(:)
  character (30) :: aaa1, bbb1, ntrirec, mpi_process_id_string, nom_methode
  character (30) :: valtemps, D_ETA, D_DEBIT, AFF_DEBITS, debit_tot, coef_frot
  character (2)  :: njaug
  character (200):: SOLFILE2D, SOLFILE3D, SOLFILE2D_MC, SOLFILE3D_MC, TECPLOT, SOLFILEMC, fichsolfile3d_MC_FV 
  character (200):: SOLFILEJ_ETA, SOLFILEJ_H, SOLFILEJ_U, SOLFILEJ_V, fich_debit_coupe, file_BC, file_Q_coupes
  character (200):: sol_elt_ts, sol_elt_final, sol_nd_final 
  character (200):: solfile_eta_T3S, solfile_h_T3S, solfile_u_T3S, solfile_v_T3S
  character (200):: solfile_para, solfile_simple

  character (20):: base_h_num, base_eta_num, base_eta_tild_num, base_hu_num, base_hv_num, base_u_num, base_v_num, lamda_moy_num, lamda_max_num
  character (1)::  num_seq_base1
  character (2)::  num_seq_base2
  character (3)::  num_seq_base3

  integer, parameter :: w=1, ndim=2, ndln=3     
  integer, parameter :: departchrono=1
  integer, parameter :: convec=1

  integer :: n_seq_base     
  integer :: nelt, nnt, ns, ndi, ndo, ndw, correction, prediction, nbase, nbase_h, nbase_eta, nbase_eta_tild, nbase_hu, nbase_hv, nbase_u, nbase_v, maxdimbase
  integer :: nelt_non_fant
  integer :: nelt_fant_recep !,nelt_fant_envoi
  integer :: nelt_fant_recep_bloc, nelt_fant_envoi_bloc
  integer :: nelt_entree, nelt_sortie, n_Q, tc_init, start

  real(fp_kind) :: tc, cotemin, t_reg_perm, flux_total, debit_n, x0, vol_tot_entre, vol_tot_sorti, debit_sortie,debit_sortie0, debit_entree_sum, distcote
  real(fp_kind), dimension(20) :: debit_entree
  real(fp_kind) :: h0, coef_bol  ! Pour le problème du bol parabolique 

  !real(fp_kind), dimension(200000)             :: tvis3d2 , tvis2d2, tsoljauge, tsolrestart, tsolvtk
  real(fp_kind), dimension(:), allocatable             :: tvis3d2 , tvis2d2, tsoljauge, tsolrestart, tsolvtk, long_entree, cotemin_arr, tsolcoupes, tsolsimple
  character(len=32), dimension(:), allocatable :: solname_vtk
  integer, dimension(:)  ,   allocatable :: ndinput, ndoutput, ndwall, i_dry_wet, nbr_nds_coupes, numero_ndinput, numero_ndoutput
  ! integer, dimension(:,:), allocatable :: elt_fant_recep, elt_fant_envoi
  integer, dimension(:,:), allocatable :: elt_fant_recep_bloc, elt_fant_envoi_bloc
  integer, dimension(:,:),   allocatable :: connectivite, ij_wet_dry, ij_dry_wet, nds_coupes
  integer, dimension(:,:,:),   allocatable :: boundary
  real(fp_kind), dimension(:)  ,   allocatable :: flux_interface, manning_nd, manning_nelt
  real(fp_kind), dimension(:,:),   allocatable :: coo_table_elemwise, coordonnees, phi, phi_h, phi_eta, phi_eta_tild, phi_hu, phi_hv, phi_u, phi_v, phij_u, phij_v, phi_h_eta
  real(fp_kind), dimension(:,:),   allocatable :: a, a0, a01, resred, Mpk1_hu, Mpk1_hv, vdlg_moy_snap
  real(fp_kind), dimension(:,:),   allocatable :: Mpk_deta, Mpk_dhu, Mpk_dhv, Mpk_u, Mpk_v, hgn1, hgn2, un1,un2, vn1, vn2, Sfxu, Sfxv, Sfyv, Sfyu 
  real(fp_kind), dimension(:,:,:), allocatable :: Cg2, Cg3, Chuu2, Chuv2, Chvv3, Chuv3, MSfxu, MSfxv, MSfyv, MSfyu
  real(fp_kind), dimension(:),     allocatable :: a_eta, a0_eta, a01_eta, resred_eta, MQk_eta, Mcl_out_eta
  real(fp_kind), dimension(:),     allocatable :: a_hu,  a0_hu,  a01_hu,  resred_hu, MQk_hu, Mcl_out_hu
  real(fp_kind), dimension(:),     allocatable :: a_hv,  a0_hv,  a01_hv,  resred_hv, MQk_hv, Mcl_out_hv
  real(fp_kind), dimension(:),     allocatable :: a_h, a_u,  a_v, hun1, hvn2, deta, dhu, dhv, hgHn1, hgHn2, huun1, huun2, huvn1, hvvn2, Sfx1, Sfx2, Sfy1, Sfy2
  real(fp_kind), dimension(:),     allocatable :: huun1full, huun2full, huvn1full, hvvn2full, BQi_eta, BQi_hu, BQi_hv 
  real(fp_kind), dimension(:,:),   allocatable :: Bi_jp,Bijp,Bijpn1_eta,Bijpn2_eta,Bijpn3_hu,Bijpn3_hv,Bi_jp_hu,Bi_jp_hv
  real(fp_kind), dimension(:,:,:), allocatable :: Bijpn_uhu, Bijpn_uhv, Bijpn_vhu, Bijpn_vhv
  real(fp_kind), dimension(:),     allocatable :: Bzmij, phi_h_zi
  real(fp_kind), dimension(:,:),   allocatable :: lamda_stock, donnees_entree, donnees_sortie
  real(fp_kind)                                :: lamda, max_a_eta
  real(fp_kind), dimension(:)  ,   allocatable :: sourcfric_hv, elts_entree, elts_sortie
  real(fp_kind), dimension(:,:),   allocatable :: Cg2_eta_tild, Cg3_eta_tild, debit_t

  real(fp_kind), dimension(10)                 :: Q_coupe

  type(cudaDeviceProp)                    :: prop

  real(fp_kind), allocatable :: debit_entree_arr(:,:), x_centroid(:), y_centroid(:)
  real(fp_kind), allocatable :: debit_sortie_arr(:)
  real(fp_kind), allocatable :: vol_tot_entre_arr(:)
  real(fp_kind), allocatable :: vol_tot_sorti_arr(:)
  integer, allocatable :: io_identifier(:)

  integer, parameter :: gridxlim=65535, gridylim=2147483647

  real(fp_kind), dimension(:)  , allocatable :: surf, sh0, shu0, shv0, su0,she0, sv0, zm
  real(fp_kind), pinned, dimension(:,:), allocatable :: vdlg, vdlg0, vdlg_nodes, vdlg_visu
  real(fp_kind) :: temps_initial, temps_final

  integer :: nmax_ptset=0
end module global_data

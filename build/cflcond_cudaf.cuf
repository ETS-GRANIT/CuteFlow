attributes(global) subroutine cflcond_cudaf(solut_d, deltatmin_d)
  ! ======================================================================
  !     cfl_dcond = calculation of the time step following the cfl_d
  !     auteur : Youssef Loukili  GRANIT ETSMTL
  !     version : 1.0  ;  May 12 2003
  ! ======================================================================

  use precision_m
  use global_device

  implicit none

  real(fp_kind), dimension(:,:), intent(in)     :: solut_d
  real(fp_kind), intent(inout)                  :: deltatmin_d(:)

  real(fp_kind)               :: hauteur, vitessu, vitessv, normvites, vitessmax
  integer                     :: ti,gi

  ti = threadIdx%x
  gi = (blockIdx%x - 1)*blockDim%x + ti


  if(gi <= nelt_d-nelt_fant_recep_d) then
    deltatmin_d(gi) = 1000000.0D0
    hauteur = solut_d(1,gi)
    if ( hauteur > tolisec_d ) then
      vitessu = solut_d(2,gi) / hauteur
      vitessv = solut_d(3,gi) / hauteur
      normvites = sqrt(vitessu**2 + vitessv**2)
      vitessmax = max( 0.01D0, (normvites + sqrt(gp_d * abs(hauteur))))
      deltatmin_d(gi) = min( cfl_d * cotemin_arr_d(gi)/vitessmax, 1000000.0D0)
    else
      deltatmin_d(gi) = 1000000.0D0
    endif
  endif   
end subroutine cflcond_cudaf

attributes(global) subroutine cflcond_sec_cudaf(solut_d, deltatmin_d, dt_d)
  !!Met le pas de temps minimal des mailles mouill√©es dans toutes les mailles seches

  use precision_m
  use global_device

  implicit none

  real(fp_kind), dimension(:,:), intent(in)     :: solut_d
  real(fp_kind), intent(inout)                  :: deltatmin_d(:)
  real(fp_kind), intent(in)                     :: dt_d

  integer                     :: i, j
  real(fp_kind)               :: hauteur
  integer                     :: ti,gi

  ti = threadIdx%x
  gi = (blockIdx%x - 1)*blockDim%x + ti

  if(gi <= nelt_d-nelt_fant_recep_d) then
    hauteur = solut_d(1,gi)
    if ( hauteur <= tolisec_d ) then
      deltatmin_d(gi) = 1e-3*dt_d*cotemin_d/cotemin_arr_d(gi)
    endif
  endif   
end subroutine cflcond_sec_cudaf

module precision_m
    integer , parameter :: singlePrecision = kind(0.0)
    integer , parameter :: doublePrecision = kind(0.0d0)
    
    ! Comment out one of the lines below
        ! integer , parameter :: fp_kind = singlePrecision
    integer , parameter :: fp_kind = doublePrecision

    contains
    subroutine cuda_glerror(err_string, which)
        use cudafor
        character(*), intent(in)   :: err_string
        integer, intent(in)        :: which

        integer :: ierr

        if(which == 1) then 
            ierr = cudaGetLastError()
        elseif(which == 2) then 
            ierr = cudaDeviceSynchronize()
        endif

        if (ierr .ne. 0) then
            write(*,*) err_string
            print*, cudaGetErrorString(ierr)
            write(*,*) 'exiting ...'
            call exit(1)
        endif

    end subroutine cuda_glerror

    subroutine check_gridlim(block,grid,err_string)
        use cudafor
        type(dim3), intent(in)     :: block, grid
        character(*), intent(in)   :: err_string


        integer :: gridxlim, gridylim

        gridylim = 65535
        gridxlim = 2147483647 

        if(block%x*block%y > 1024) then 
            write(*,*) '------------------------------------------------------------------------------------'
            write(*,*) err_string
            write(*,*) 'number of threads per block (block%x*block%y) = ',(block%x*block%y), ', exceeds 1024'
            write(*,*) 'Try reducing the number of threads per block such that (block%x*block%y)  <=1024'
            write(*,*) 'exiting ...'
            write(*,*) '------------------------------------------------------------------------------------'
            call exit(1)
        endif

        if(grid%x > gridxlim) then
            write(*,*) '--------------------------------------------------------------------------------------------------------------' 
            write(*,*) err_string
            write(*,*) 'grid%x = ',grid%x, ' exceed grid x dimension limit (', gridxlim,')'
            write(*,*) 'Try increasing the block x dimension so as to reduce grid%x such that max block size (block%x*block%y)  <=1024'
            write(*,*) 'exiting ...'
            write(*,*) '--------------------------------------------------------------------------------------------------------------'
            call exit(1)
        endif

        if(grid%y > gridylim) then
            write(*,*) '--------------------------------------------------------------------------------------------------------------' 
            write(*,*) err_string
            write(*,*) 'grid%y = ',grid%y, ' exceed grid y dimension limit (', gridylim,')'
            write(*,*) 'Try increasing the block y dimension so as to reduce grid%y such that max block size (block%x*block%y)  <=1024'
            write(*,*) 'exiting ...'
            write(*,*) '--------------------------------------------------------------------------------------------------------------'
            call exit(1)
        endif

    
    end subroutine check_gridlim

end module precision_m


